definitions:
  dto.AddForward:
    properties:
      listenAddress:
        type: string
      listenPort:
        type: integer
      network:
        type: string
      targetAddress:
        type: string
      targetPort:
        type: integer
    type: object
  dto.NetworkInterface:
    properties:
      address:
        type: string
      default_gateway:
        type: boolean
      desc:
        type: string
    type: object
  resp.DataResp:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
info:
  contact:
    email: cloverzrg@gmail.com
    name: API Support
    url: https://github.com/cloverzrg/go-portforward
  license:
    name: go-portforward
  title: go-portforward
  version: "1.0"
paths:
  /v1/forward/:
    post:
      consumes:
      - application/json
      description: '""'
      parameters:
      - description: 请求json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/dto.AddForward'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.DataResp'
      summary: add a forward and start it
      tags:
      - network
  /v1/forward/{id}/delete:
    post:
      consumes:
      - application/json
      description: '""'
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.DataResp'
      summary: delete forward by id
      tags:
      - network
  /v1/forward/{id}/start:
    post:
      consumes:
      - application/json
      description: '""'
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.DataResp'
      summary: start forward by id
      tags:
      - network
  /v1/forward/{id}/stop:
    post:
      consumes:
      - application/json
      description: '""'
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.DataResp'
      summary: stop forward by id
      tags:
      - network
  /v1/network/interfaces:
    get:
      description: '""'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/resp.DataResp'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.NetworkInterface'
                  type: array
              type: object
      summary: get network interface list
      tags:
      - network
swagger: "2.0"
